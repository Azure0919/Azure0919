[{"title":"BCrypt:Illegal base64 character 24","date":"2020-02-26T07:14:08.000Z","path":"/posts/dbdc2f2/","text":"关于Base64的加密解密 只是测试用,一般是不会用作密码加密的因为这个解密非常简单,代码如下: 123if(BCrypt.checkpw(password,user.getPassword())){ //这里省略匹配成功后的代码} 报错信息如下 1234java.lang.IllegalArgumentException: Illegal base64 character 24 at java.util.Base64$Decoder.decode0(Base64.java:714) ~[na:1.8.0_231] at java.util.Base64$Decoder.decode(Base64.java:526) ~[na:1.8.0_231] at java.util.Base64$Decoder.decode(Base64.java:549) ~[na:1.8.0_231] emmm,又没解决!!!但是我大概猜到是因为数据库的问题了正常情况密码经过加密再存储的但是现在是直接导入的 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"bug","slug":"bug","permalink":"https://azure0919.github.io/tags/bug/"}]},{"title":"IDEA Plugins collections","date":"2020-02-24T11:44:28.000Z","path":"/posts/6de8b2c/","text":"IDEA这款代码工具相信很多人都在用,好的插件使编码更加舒适顺畅一些,下面为大家介绍几款本人常用的插件,如果大家有好用的欢迎推荐交流(由于现在评论模块尚未开通,只能点击左边eamil邮件沟通啦十分抱歉) 实力派插件,开点外挂 1231.Alibaba java Coding Guidelinges 实时检测功能会在开发过程中对当前文件进行检测，并以高亮的形式提示出来，同时也可以支持Quick Fix，该功能默认开启，可以通过配置关闭。 更多详细内容可参考:https://github.com/alibaba/p3c 1232.Codota 最好的代码实例,是继IntelliJ后，代码补全方面锦上添花的智能AI代码补全插件，使用Codota将拥有全球数百万个顶级代码示例。 官方下载渠道:https://plugins.jetbrains.com/plugin/7638-codota 1234563.Free Mybatis plugin 是一款增强idea对mybatis支持的插件,生成mapper xml文件快速从代码跳转到mapper及从mapper返回代码,mybatis自动补全及语法错误提示,集成mybatis generator gui界面 官方下载:https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin 更多详细内容参考:https://github.com/wuzhizhan/free-idea-mybatis (不知道为何作者迁移到gitee然后项目404,此链接还可打开三个月前有维护记录) 1234.JRebel for Intellij 热部署插件,可实时编译解决在项目运行状态run/debug 状态下任意修改java文件并动态反馈到运行的项目中,省去很多重启时间,已不再免费提供注册但是可以使用破解版,大家可以网上搜索看看 官方下载:https://plugins.jetbrains.com/plugin/4441-jrebel-and-xrebel-for-intellij 1235.Lombok 目前这个插件相信大家最熟悉不过了,自动插入编辑器和构建工具,不用再手动编写另一个getter或equals方法，带有一个注释的类将具有功能全面的生成器，自动执行日志记录变量等等 官方下载:https://plugins.jetbrains.com/plugin/6317-lombok 1236.Translation 翻译插件,中英翻译, 可以当词典用,详细资料参考 官方文档:https://github.com/YiiGuxing/TranslationPlugin 1237.Markdown support 提供了在IDE中编辑Markdown文件并在实时预览中查看渲染的HTML的功能 官方下载:https://plugins.jetbrains.com/plugin/7793-markdown 1238.RestfulToolkit 一套 RESTful 服务开发辅助工具集,有效解决在无接口文档时，双方的联调工作,并且在idea上可直接使用再也不用频繁切换测试工具窗口了,此工具适合做接口测试，以及敏捷开发时使用，真证前后端分离式开发 官方下载:https://plugins.jetbrains.com/plugin/10292-restfultoolkit 接下来是一些花里胡哨的插件可以给我们的平淡的代码生活带来一点色彩 1231.Crep Console 可以设置不同级别log的字体颜色和背景色,同时它还可以将打开任意文件并进行日志高亮 官方下载:https://plugins.jetbrains.com/plugin/7125-grep-console 1232.Nyan progress bar 普通的人进度条都太普通，我的精致要装扮到每一个细节，包括进度条！可以显示成彩虹跳跃的样子哦 官方下载:https://plugins.jetbrains.com/plugin/8575-nyan-progress-bar 1233.Background Image Plus 嗯嗯程序员有女朋友的可以把女朋友设置为背景墙,嗯对着女朋友编程哈哈如果没有的话当我没说,设置成你的信仰吧 官方下载:https://plugins.jetbrains.com/plugin/8502-background-image-plus enmmm暂时就这些等下次再遇到好的插件再补齐给大家吧! document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"plug-in","slug":"plug-in","permalink":"https://azure0919.github.io/tags/plug-in/"}]},{"title":"spring-cloud-gateway-yml","date":"2020-02-22T12:31:56.000Z","path":"/posts/80819933/","text":"spring-cloud-gateway的配置是这样的 1234567891011121314151617gateway: routes: - id: goods_route #唯一表示符号 #uri: http://localhost:18081 #用户请求需要路由到该服务[指定要路由的服务] uri: lb://goods #使用loadBalanceClient 实现负载均衡后面是微服务的名称[主要用于集群环境单体可直接写地址] predicates: #路由断言[规则] #- Host=cloud.sx.nine** #用户请求域名配置规则,所有以cloud.sx.nine的请求都将被路由至http://localhost:18081微服务 #- Path=/api/brand/** #根据请求路径过滤,所有以/brand开始的请求都路由至http://localhost:18081微服务 - Path=/** filters: - StripPrefix=1 #将请求路径中的第一个路径去掉,请求路径以/区分,一个/代表一个路径 #- PrefixPath=/band #用户所有请求添加/brand前缀并且将该请求路由到http://localhost:18081微服务 - name: RequestRateLimiter args: key-resolver: \"#{@ipKeyResolver}\" redis-rate-limiter.replenishRate: 1 redis-rate-limiter.burstCapacity: 4 报错是这样的 12345678Caused by: org.yaml.snakeyaml.parser.ParserException: while parsing a block collection in 'reader', line 20, column 13: - Path=/api/brand/** #根据请求路径过滤,所 ... ^expected &lt;block end&gt;, but found '&lt;block mapping start&gt;' in 'reader', line 21, column 14: filters: ^ 哎头疼 yml配置文件对格式要求太严格了解决方案: StripPrefix与name对齐 其他的跟随缩进就好了 12345678filters: - StripPrefix=1 #将请求路径中的第一个路径去掉,请求路径以/区分,一个/代表一个路径 #- PrefixPath=/band #用户所有请求添加/brand前缀并且将该请求路由到http://localhost:18081微服务 - name: RequestRateLimiter args: key-resolver: \"#{@ipKeyResolver}\" redis-rate-limiter.replenishRate: 1 redis-rate-limiter.burstCapacity: 1 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"bug","slug":"bug","permalink":"https://azure0919.github.io/tags/bug/"}]},{"title":"nginx openresty content_by_lua_file 404","date":"2020-02-19T07:39:21.000Z","path":"/posts/51429/","text":"配置好lua脚本如下错误: 123 nginx openresty content_by_lua_file 404错误:2020/02/10 19:18:59 [error] 21231#0: *63 failed to load external Lua file \"/home/l/lua/content_lua.lua\":cannot open /home/l/lua/content_lua.lua: Permission denied, client: [ip], server: localhost, request: \"POST /lua_server HTTP/1.1\", host: \"[ip]+[port]\" nginx配置文件里添加 1user root root; 即可 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"bug","slug":"bug","permalink":"https://azure0919.github.io/tags/bug/"}]},{"title":"blog introduce","date":"2020-02-16T06:50:35.000Z","path":"/posts/24267/","text":"关于博客 Welcome to my blog ! I would appreciate your guidance . 欢迎同行技术交流 不对的地方还请多多赐教 12345678910111213141516171819202122232425262728@Author: NineEr@Date: 2020/2/16 18:53@Description:关于我 \"这世上\" \"有人住高楼 有人在深沟\" \"有人光万丈 有人一身绣\" \"世人千万种 浮云莫去求\" \"斯人若彩虹 遇上方知有\"&lt;!-- more --&gt;我是一个标准的天蝎座女孩,性子冷淡,骨子倔强,上进心事业心都很强,尊敬每一个努力上进的人.梦想注定是孤独的旅程,路上少不了质疑和嘲笑,但那又怎样,勇往直前最终到达彼岸的是你不是他们.对于心中有目标的你们,也包括我自己,也许一路上会碰到许多人,乱花渐入迷人眼,随时都可能转移注意力.但是我希望我们可以坚持下来,当然也会有好的建议,多多采纳虚心学习,前辈们走过你走的弯路.有人说:\"优秀的人注定是孤独的\" 所以大概走到最后的内心都很强大吧.可是我们也会遇到一个如彩虹般绚丽的人陪你走过这孤独的一生的啊,怕什么呢,勇敢往前走吧!最后一定要感谢一路陪你走来的所有人,不管好的坏的都是你的经历.在你的平淡人生中留下不可复刻的记忆! \"像我这样优秀的人 本该灿烂过一生 怎么二十多年到头来 还在人海里浮沉\" \"像我这样聪明的人 早就告别了单纯 怎么还是用了一段情 去换一身伤痕\" \"像我这样迷茫的人 像我这样寻找的人 像我这样碌碌无为的人 你还见过多少人\" \"像我这样庸俗的人 从不喜欢装深沉 怎么偶尔听到老歌时 忽然也晃了神\" \"像我这样懦弱的人 凡事都要留几分 怎么曾经也会为了谁 想过奋不顾身\" \"像我这样迷茫的人 像我这样寻找的人 像我这样碌碌无为的人 你还见过多少人\" \"像我这样孤单的人 像我这样傻的人 像我这样不甘平凡的人 世界上有多少人\" 毛不易这首歌的歌词,听到心里去了,最怕不甘平庸却还迟迟不愿行动.有人见尘埃,有人见星辰,祝你早日长成你想要的模样,祝你人间值得! 博客搭建参考:https://blog.csdn.net/weixin_39879178/article/details/80319392 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[{"name":"blog","slug":"blog","permalink":"https://azure0919.github.io/tags/blog/"}]}]